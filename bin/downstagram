#!/usr/bin/env node

var Downstagram = require('../lib/downstagram');
var version = require('../package.json').version;
var config = require('../lib/config.js');

function showHelp(){
    console.log('Usage: downstagram [OPTION]... <username>');
    console.log('\nOptions:');
    console.log('  -m, --metadata           -- also save associated metadata (JSON)');
    console.log('  -o, --output <directory> -- output directory');
    console.log('  --no-progress-bar        -- do not show progress bar');
}

function showVersion(){
    console.log('Version ' + version);
}

if (!config.auth.access_token) {
    require('../lib/setup.js')();
} else {
    var args = process.argv;
    args.splice(0, 2);
    var username;

    if (args.length === 0) {
        showHelp();
        process.exit(0);
    }

    var options = {
	keepMetadata: false,
	outputDirectory: '.',
	showProgressBar: true,
    };
    var i = 0;
    while (i<args.length) {
        var argument = args[i];
        if (argument.indexOf('-') === 0) {
            if (argument === '-v' || argument === '--version') {
                showVersion();
                process.exit(0);
            } else if (argument === '-m' || argument === '--metadata') {
                options.keepMetadata = true;
            } else if (argument === '--no-progress-bar') {
                options.showProgressBar = false;
            } else if (argument === '-h' || argument === '--help') {
                showHelp();
                process.exit(0);
            } else if (argument === '-o' || argument === '--output') {
                if (i+1 === args.length) {
                    console.error('-o option requires an argument');
                    process.exit(1);
                }
                i += 1;
                options.outputDirectory = args[i];
            } else {
                showHelp();
                process.exit(1);
            }
        } else {
            username = argument;
        }
        i++;
    }

    var ds = new Downstagram(username, options);
    ds.start();
}
